/* Las diferentes cards de cardos se alinearan con la siguiente configuración */
.card-grid-fluid {
  /* max-width: 90%; */
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 320px));
  gap: var(--pf-gap-grid);
  grid-auto-flow: dense;
}

/* Establecemos los estilos que tendrán en común las cards */
.card {
  position: relative;
  /* Establecemos unas medidas que permitan ver todo el contenido */
  width: 240px;
  height: 320px;
  outline: 2px solid var(--pf-color-brown-light);
  border-radius: var(--pf-radius-card);
  padding: 16px;
  background: var(--pf-color-beige);
  /* Ocultamos para que solo se vea una de las caras */
  overflow: hidden;
}

.card-front {
  /* Hemos usado absolute para posicionar correctamente la card, 
    usar esta propiedad implica retocar correctamente todo, no vale con el flex*/
  position: absolute;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  /* gap: 15px; */
  width: 85%;
  /* width: fit-content; */
  height: 90%;
  /* height: fit-content; */
  /* Con esta propiedad evitamos que se descentre el contenido */
  /* left: 0; */
  /* Establecemos el efecto */
  transition: transform 1s cubic-bezier(0.785, 0.135, 0.15, 0.86);
}

/* Mentenemos los estilos del h de institucion pero le aplicamos un bold para dar más importancia*/
.card-institution {
  font-weight: bold;
  text-align: center;
}

/* Establecemos las propiedades de la img del cardo */
.card-img {
  border-radius: var(--pf-radius-img);
  /* Con los max somos capaces de organizar como crecen los logos */
  max-width: 190px;
  max-height: 120px;
}

/* Ajustamos el tamaño de la bandera */
.card-flag {
  width: 32px;
}

/* Mentenemos los estilos del h de title pero le aplicamos un bold para dar más importancia*/
.card-title {
  text-align: center;
}

/* Hemos obtenido la flecha de Google Fonts, la cargamos con las propiedades que he decidido */
.material-symbols-outlined {
  font-variation-settings: 'FILL' 0, 'wght' 500, 'GRAD' 200, 'opsz' 48;
}

/* Establecemos el efecto del hover para desplazar el contenido */
.card:hover .card-front {
  /* Damos un efecto extra al añadir ese 20% */
  transform: translateX(-120%);
}

/* Gestionamos los estilos de la parte back de la card, donde irá la descripción del cardo */
.card-back {
    display: flex;
    flex-direction: column;
    /* justify-content: center; */
    align-items: center;
    /* align-content: flex-end; */
    /* width: 90%; */
    /* height: 0%; */
  /* De base mantenemos la parte trasera del back con el translate para que no se vea */
  transform: translateX(120%);
  transition: transform 1s cubic-bezier(0.785, 0.135, 0.15, 0.86);
  /* text-align: justify; */
  gap: var(--pf-gap-card);
  /* bottom: -100px; */
}

/* Damos un estilo de cursiva a la ubicación */
.card-location {
    font-style: italic;
  }

  .card-description {
      /* Establecemos un border a modo de separador de info*/
  border-bottom: var(--pf-color-brown-medium) solid 2px;
  /* Se añade este padding para dar espacio al border insertado */
  padding-bottom: 10px;
  }

.card-info {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 10px;
  padding-bottom: 10px;
  /* flex-direction: row-reverse; */
}

/* Damos las propiedades al logo de github */
.card-links img {
  width: 32px;
  /* padding-top: 10px; */
}

/* Establecemos el efecto del hover para regresar el contenido desplazado */
.card:hover .card-back {
  transform: translateX(0);
}
